---
title: "1: Conditional Probability"
author: "Derek Sollberger"
date: "2024-01-30"
format: 
  html:
    toc: true
---

```{r}
#| echo: false
#| message: false
#| warning: false
library("gt")
library("tidyverse")
```

# SML 320

## Bayesian Analysis

* Spring 2024

::: {.callout-tip collapse="true"}
## Course Description

This course provides an introduction to Bayesian analysis---a powerful statistical framework for making inferences and modeling uncertainty in a wide range of applications. Students will explore the fundamental principles of Bayesian statistics, probability theory, Bayesian inference, and practical applications of Bayesian modeling. The course will cover both the theory and hands-on implementation using data science software and the R programming language.
:::

# Introducting the Presenter

## Lecturer

![](Lecturer_Derek.png)


## Current Research in Pedagogy

:::: {.columns}

::: {.column width="50%"}
![](MBVP SABER poster.png)
:::

::: {.column width="50%"}
- active learning
- computer programming
- flipped classrooms
:::

::::

## Identity Statement

:::: {.columns}

::: {.column width="75%"}
- Originally from Los Angeles
- Math: easier to understand through graphs
- Computer Programming: years of experience with R, Python, MATLAB, PHP, HTML, etc.
- Learning: drawn to puzzles and manageable tasks
- Personality: shy, introvert
:::

::: {.column width="25%"}
![](math-zach-galifianakis.gif)
:::

::::

# Assessment

::: {.callout-note collapse="true"}

## Before Lecture

* 10 percent of semester grade
* review or preview of statistics ideas, definitions, etc.
* must be completed before class
* may be repeated until correct

:::

::: {.callout-note collapse="true"}

## Computation

* 25 percent of semester grade
* weekly problem sets from textbook or instructor
* students are encouraged to discuss these tasks during precepts and study groups

:::

::: {.callout-note collapse="true"}

## Inference

* 15 percent of semester grade
* Students will be presented scenarios of model summaries and results and will be asked to answer inference tasks.
* These assignments will be handled through GradeScope.

:::

::: {.callout-warning collapse="true"}

## Project Benchmarks

* 10 percent of semester grade
* As seen in the schedule below, students will maintain progress toward their semester project.
* Students are encouraged to discuss these plans during precepts and office hours.

:::

::: {.callout-warning collapse="true"}

## Progress Presentation

* 10 percent of semester grade
* Students will update instructors and their peers on their data search, exploratory data analysis, and statistical modeling

:::

::: {.callout-important collapse="true"}

## Final Presentation

* 10 percent of semester grade
* Students will present their application of Bayesian techniques and literature review toward their semester project

:::

::: {.callout-important collapse="true"}

## Semester Project

* 20 percent of semester grade
* The culminating semester project will be due at the end of the semester examination period and will be assessed according to a rubric that will be provided in advance.

:::


# Reading List

## Textbook

:::: {.columns}

::: {.column width="60%"}
This course will closely follow the *Bayes Rules!* textbook by Alicia A Johnson, Miles Q Ott, and Mine Dogucu.  It is, in my opinion, the best blend of Bayesian thought, mathematical background, computer processes, and relevant applications.  The authors have made the materials of their textbook available online at <https://www.bayesrulesbook.com/>
:::

::: {.column width="40%"}
![Bayes Rules](Bayes_Rules_textbook_cover.png)
:::

::::

## Additional Reading

The following list of books is optional for student studies, but the instructor may use some materials to add depth and interest to the course.

::: {.callout-tip collapse="true"}

## Additional Reading

* *Statistical Rethinking* by Richard McElreath is the premier body of work in the field of Bayesian analysis.  This resource is great for people who want to build a strong foundation in philosophy and theory in this branch of mathematics.
* *Bayesian Data Analysis* by Andrew Gelman, et al., is the classic textbook (available online) in this field that is used in several university courses.  The authors' approach work well for people looking to quickly add Bayesian approaches to their research skills.
* *Bayesian Statistics the Fun Way* by Will Kurt brings Bayesian notions to a broad audience and its presentation blends will with an introductory course in statistics.
* *Bayesian Thinking in Biostatistics* by Gary L Rosner, et al., provides rigorous applications in bioinformatics along with strong software use.

:::



# Administrative

::: {.callout-warning collapse="true"}

## Prerequisites

* Basic knowledge of probability distributions (binomial, normal)
* Understanding of statistical concepts (sampling, confidence intervals)
* Familiarity with R or Python programming is assumed
* One semester of Calculus or instructor approval

:::

::: {.callout-note collapse="true"}

## Course Learning Outcomes

By the end of this course, students will be able to:

* Understand the foundational principles of Bayesian analysis and probability theory
* Apply Bayesian techniques for parameter estimation and regression models
* Create and interpret Bayesian models for various types of data
* Effectively communicate results and conclusions from Bayesian analyses
* Gain practical experience using Bayesian analysis software

:::

::: {.callout-note collapse="true"}

## Lecture Sessions

Please keep extra noise to a minimum.  Cell phones may be used as long as they are on silent or vibrate.  Please also review the Cooperative Classroom statement below.

:::

::: {.callout-note collapse="true"}

## Precepts

Precepts will be held for 80 minutes per week.  Students will develop problem-solving skills through collaborative work on the computer programming and written assignments while also working toward their semester projects.

:::

::: {.callout-note collapse="true"}

## Computers

Use of a laptop computer is highly recommended for this course, and students are asked to bring their laptop computer to every lecture and precept session.

* More information about computer needs can be found at <https://princeton.service-now.com/service?id=kb_article&sys_id=KB0013768>
* While Chromebooks (or other systems that discourage installation of software) can access cloud software, intensive calculations in this course may merit the use of a personal computer and downloaded software rather than server access.

:::

::: {.callout-tip collapse="true"}

## Special Accommodations

Students must register with the Office of Disability Services (ODS) (ods@princeton.edu; 258-8840) for disability verification and determination of eligibility for reasonable academic accommodations. Requests for academic accommodations for this course need to be made at the beginning of the semester, or as soon as possible for newly approved students, and again at least two weeks in advance of any needed accommodations in order to make arrangements to implement the accommodations. Please make an appointment to meet with me in order to maintain confidentiality in addressing your needs. No accommodations will be given without authorization from ODS, or without advance notice.

:::

::: {.callout-important collapse="true"}

## Academic Integrity Policy 

You are allowed to read text books and resources online. You may not ask other individuals questions (e.g., you may not ask questions on Stack Exchange or R help discussion groups). In accordance with the honor code, you must cite all sources of external information used in your work. This can be a book or a web site. Part of being a successful data scientist is having the ability to leverage existing information and techniques, so it is okay to do so in this course as long as you cite the reference.  University policies can be reviewed at <https://ua.princeton.edu/policies-resources/undergraduate-honor-system>

:::

# Learning Environment

## Cooperative Classroom

Learning in a cooperative environment should be stimulating, demanding, and fair.  Because this approach to learning is different from the competitive classroom structure that many other courses used to be based on, it is important for us to be clear about mutual expectations.  Below are my expectations for students in this class.  This set of expectations is intended to maximize debate and exchange of ideas in an atmosphere of mutual respect while preserving individual ownership of ideas and written words.  If you feel you do not understand or cannot agree to these expectations, you should discuss this with your instructor and classmates.

1.	Students are expected to work cooperatively with other members of the class and show respect for the ideas and contributions of other people.
2.	When working as part of a group, students should strive to be good contributors to the group, listen to others, not dominate, and recognize the contributions of others.  Students should try to ensure that everyone in the group is welcome to contribute and recognize that everyone contributes in different ways to a group process.
3.	Students should explore data, make observations, and develop inferences as part of a group.  If you use material from published sources, you must provide appropriate attribution.

:::: {.columns}

::: {.column width="50%"}
(Students will be asked to acknowledge this document in an online form.)

This document has been adapted from
*Scientific Teaching*
by Jo Handelsman, Sarah Miller, and Christine Pfund
:::

::: {.column width="50%"}
![Scientific Teaching](Scientific_Teaching.png)
:::

::::

## Pep Talk

Learning R can be difficult at first---it is like learning a new language, just like Spanish, French, or
Chinese. Hadley Wickham---the chief data scientist at RStudio and the author of some amazing R packages you will be using like `ggplot2`---made this wise observation:

::: {.callout-tip collapse="true"}

## Wisdom from Hadley Wickham

It's easy when you start out programming to get really frustrated and think, “Oh it's me, I'm really stupid,” or, “I'm not made out to program.” But, that is absolutely not the case. Everyone gets frustrated. I still get frustrated occasionally when writing R code. It's just a natural part of programming. So, it happens to everyone and gets less and less over time. Don't blame yourself. Just take a break, do something fun, and then come back and try again later.

:::

If you are finding yourself taking way too long hitting your head against a wall and not understanding, take a break, talk to classmates, ask questions ... e-mail [Derek], etc.  I promise you can do this.

---Andrew Heiss, Georgia State University   

## Inclusion Statement

I value all students regardless of their background, country of origin, race, religion, ethnicity, gender, sexual orientation, disability status, etc. and am committed to providing a climate of excellence and inclusiveness within all aspects of the course. If there are aspects of your culture or identity that you would like to share with me as they relate to your success in this class, I am happy to meet to discuss. Likewise, if you have any concerns in this area or facing any special issues or challenges, you are encouraged to discuss the matter with me (set up a meeting by e-mail) with an assurance of full confidentiality (only exception being mandatory reporting of academic integrity code violations or sexual harassment).