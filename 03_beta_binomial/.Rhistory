columns = preferred_format
)
)
gt::gtsave(my_table, "BRG_table_of_abstracts.html")
library("tidyverse")
df <- readr::read_csv("DL0830A Survey Student Analysis Report.csv")
df_raw <- readr::read_csv("DL0830A Survey Student Analysis Report.csv")
df_clean <- df_raw |>
select(9, seq(11, 39, 4))
View(df_clean)
View(df_raw)
View(df_clean)
df_clean <- df_raw |>
select(9, seq(11, 39, 4)) |>
slice(2:n())
View(df_clean)
colnames(df_clean) <- c("table", "G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8")
df_clean <- df_clean |>
mutate(side = case_when(
table == "Table 1" ~ "side 1",
table == "Table 2" ~ "side 1",
table == "Table 3" ~ "side 1",
table == "Table 4" ~ "side 1",
table == "Table 5" ~ "side 1",
TRUE ~ "side 2",
))
df_clean |>
ggplot(aes(x = side, y = G1)) +
geom_boxplot()
df_clean |>
ggplot(aes(x = side, y = G1)) +
geom_boxplot() +
labs(title = "Responses for Graph 1",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
library("ggsignif")
install.packages("ggsignif")
library("ggsignif")
library("tidyverse")
df_clean |>
ggplot(aes(x = side, y = G1)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
)
labs(title = "Responses for Graph 1",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G1)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
labs(title = "Responses for Graph 1",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean <- df_clean |>
mutate(side = case_when(
table == "Table 1" ~ "side 1",
table == "Table 2" ~ "side 1",
table == "Table 3" ~ "side 1",
table == "Table 4" ~ "side 1",
table == "Table 5" ~ "side 1",
TRUE ~ "side 2",
)) |>
group_by(side) |>
mutate(count = n()) |>
ungroup()
df_clean <- df_clean |>
mutate(side = case_when(
table == "Table 1" ~ "side 1",
table == "Table 2" ~ "side 1",
table == "Table 3" ~ "side 1",
table == "Table 4" ~ "side 1",
table == "Table 5" ~ "side 1",
TRUE ~ "side 2",
)) |>
group_by(side) |>
mutate(count = n()) |>
ungroup() |>
mutate(for_label = paste("n = ", count))
df_clean <- df_raw |>
select(9, seq(11, 39, 4)) |>
slice(2:n())
colnames(df_clean) <- c("table", "G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8")
df_clean <- df_clean |>
mutate(side = case_when(
table == "Table 1" ~ "side 1",
table == "Table 2" ~ "side 1",
table == "Table 3" ~ "side 1",
table == "Table 4" ~ "side 1",
table == "Table 5" ~ "side 1",
TRUE ~ "side 2",
)) |>
group_by(side) |>
mutate(count = n()) |>
ungroup() |>
mutate(for_label = paste("n =", count))
df_clean |>
ggplot(aes(x = side, y = G1)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = 1, y = side, label = for_label))
df_clean |>
ggplot(aes(x = side, y = G1)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = 1, y = side, label = for_label)) +
labs(title = "Responses for Graph 1",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G1)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = side, y = 1, label = for_label)) +
labs(title = "Responses for Graph 1",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G1)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = side, y = 1, label = for_label)) +
labs(title = "Responses for Graph 1",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G2)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = side, y = 1, label = for_label)) +
labs(title = "Responses for Graph 2",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G3)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = side, y = 1, label = for_label)) +
labs(title = "Responses for Graph 3",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G4)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = side, y = 1, label = for_label)) +
labs(title = "Responses for Graph 4",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G5)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = side, y = 1, label = for_label)) +
labs(title = "Responses for Graph 5",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G6)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = side, y = 1, label = for_label)) +
labs(title = "Responses for Graph 6",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G7)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = side, y = 1, label = for_label)) +
labs(title = "Responses for Graph 7",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
df_clean |>
ggplot(aes(x = side, y = G8)) +
geom_boxplot() +
geom_signif(
comparisons = list(c("side 1", "side 2")),
map_signif_level = TRUE
) +
geom_label(aes(x = side, y = 1, label = for_label)) +
labs(title = "Responses for Graph 8",
subtitle = "August 30, 2022",
caption = "Bio 18, Fall 2022")
Q <- c(19, 12, 46, 9, 16, 7, 17)
sd(Q)
X <- 1:5
probs <- c(28, 28, 4, 22, 18)/100
ex <- probs*X
ex2 <- probs*X*X
var_x <- ex2 - ex^2
sd_x <- sqrt(var_x)
sd_x
ex <- sum(probs*X)
ex2 <- sum(probs*X*X)
var_x <- ex2 - ex^2\
var_x <- ex2 - ex^2
sd_x
sd_x
sd_x <- sqrt(var_x)
sd_x
ex
ex^2
library("Lahman")
library("tidyverse")
correlatedValues = function(x, r = 0.9){
r2 = r**2
ve = 1-r2
SD = sqrt(ve)
e  = rnorm(length(x), mean=0, sd=SD)
y  = r*x + e
return(y)
}
# df <- Teams |>
#   filter(yearID >= 1990) |>
#   filter(yearID < 2000)
#
# readr::write_csv(df, "baseball_data_90s.csv")
df <- readr::read_csv("baseball_data_90s.csv")
head(df)
str(df, give.attr = FALSE)
colnames(df)
df |>
ggplot(aes(x = R, y = W)) +
geom_point() + #makes the scatterplot
labs(title = "MLB Data",
subtitle = "scatterplot",
caption = "seasons 1990 to 1999",
x = "runs scored",
y = "wins")
x <- rnorm(100, mean = 0, sd = 1)
y <- correlatedValues(x, r = -0.9)
cor_value <- cor(x,y, use = "pairwise.complete.obs")
df_for_graph <- data.frame(x,y)
df_for_graph |>
ggplot(aes(x = x, y = y)) +
geom_point() +
labs(title = "Correlation Example",
subtitle = paste0("r = ", round(cor_value, 4),
", strongly and negatively correlated"),
caption = "Spark 01")
x <- rnorm(100, mean = 0, sd = 1)
y <- correlatedValues(x, r = -0.5)
cor_value <- cor(x,y, use = "pairwise.complete.obs")
df_for_graph <- data.frame(x,y)
df_for_graph |>
ggplot(aes(x = x, y = y)) +
geom_point() +
labs(title = "Correlation Example",
subtitle = paste0("r = ", round(cor_value, 4),
", slightly and negatively correlated"),
caption = "Spark 01")
x <- rnorm(100, mean = 0, sd = 1)
y <- correlatedValues(x, r = 0)
cor_value <- cor(x,y, use = "pairwise.complete.obs")
df_for_graph <- data.frame(x,y)
df_for_graph |>
ggplot(aes(x = x, y = y)) +
geom_point() +
labs(title = "Correlation Example",
subtitle = paste0("r = ", round(cor_value, 4),
", virtually uncorrelated"),
caption = "Spark 01")
x <- rnorm(100, mean = 0, sd = 1)
y <- correlatedValues(x, r = 0.5)
cor_value <- cor(x,y, use = "pairwise.complete.obs")
df_for_graph <- data.frame(x,y)
df_for_graph |>
ggplot(aes(x = x, y = y)) +
geom_point() +
labs(title = "Correlation Example",
subtitle = paste0("r = ", round(cor_value, 4),
", slightly and positively correlated"),
caption = "Spark 01")
x <- rnorm(100, mean = 0, sd = 1)
y <- correlatedValues(x, r = 0.9)
cor_value <- cor(x,y, use = "pairwise.complete.obs")
df_for_graph <- data.frame(x,y)
df_for_graph |>
ggplot(aes(x = x, y = y)) +
geom_point() +
labs(title = "Correlation Example",
subtitle = paste0("r = ", round(cor_value, 4),
", strongly and positively correlated"),
caption = "Spark 01")
cor_value <- df |>
summarize(r = cor(R, W, use = "pairwise.complete.obs")) |>
unlist()
df |>
ggplot(aes(x = R, y = W)) +
geom_point(color = "blue") + #makes the scatterplot
labs(title = "MLB Data",
subtitle = paste0("r = ", round(cor_value, 4),
", slightly and positively correlated"),
caption = "seasons 1990 to 1999",
x = "runs scored",
y = "wins")
cor_value <- df |>
summarize(r = cor(RA, W, use = "pairwise.complete.obs")) |>
unlist()
df |>
ggplot(aes(x = RA, y = W, color = lgID)) +
geom_point(size = 2) + #makes the scatterplot
labs(title = "MLB Data",
subtitle = paste0("r = ", round(cor_value, 4),
", virtually uncorrelated"),
caption = "seasons 1990 to 1999",
x = "runs allowed",
y = "wins")
cor_value <- df |>
summarize(r = cor(RA, W, use = "pairwise.complete.obs")) |>
unlist()
df |>
ggplot(aes(x = RA, y = W, color = lgID)) +
geom_point(size = 2) + #makes the scatterplot
labs(title = "MLB Data",
subtitle = paste0("r = ", round(cor_value, 4),
", virtually uncorrelated"),
caption = "seasons 1990 to 1999",
x = "runs allowed",
y = "wins") +
scale_color_manual(values = c("blue", "red")) +
theme(legend.position = "none")
colnames(df)
cor_value <- df |>
summarize(r = cor(SB, CS, use = "pairwise.complete.obs")) |>
unlist()
df |>
ggplot(aes(x = SB, y = CS, color = lgID)) +
geom_point(size = 2) + #makes the scatterplot
labs(title = "MLB Data",
subtitle = paste0("r = ", round(cor_value, 4),
", virtually uncorrelated"),
caption = "seasons 1990 to 1999",
x = "runs allowed",
y = "wins") +
scale_color_manual(values = c("blue", "red")) +
theme(legend.position = "none")
cor_value <- df |>
summarize(r = cor(SB, CS, use = "pairwise.complete.obs")) |>
unlist()
df |>
ggplot(aes(x = SB, y = CS, color = lgID)) +
geom_point(size = 2) + #makes the scatterplot
labs(title = "MLB Data",
subtitle = paste0("r = ", round(cor_value, 4),
", slightly and positively correlated"),
caption = "seasons 1990 to 1999",
x = "runs allowed",
y = "wins") +
scale_color_manual(values = c("blue", "red")) +
theme(legend.position = "none")
cor_value <- df |>
summarize(r = cor(SB, CS, use = "pairwise.complete.obs")) |>
unlist()
df |>
ggplot(aes(x = SB, y = CS, color = lgID)) +
geom_point(size = 2) + #makes the scatterplot
labs(title = "MLB Data",
subtitle = paste0("r = ", round(cor_value, 4),
", slightly and positively correlated"),
caption = "seasons 1990 to 1999",
x = "runs allowed",
y = "wins") +
scale_color_manual(values = c("green", "purple")) +
theme(legend.position = "none")
cor_value <- df |>
summarize(r = cor(SB, CS, use = "pairwise.complete.obs")) |>
unlist()
df |>
ggplot(aes(x = SB, y = CS, color = lgID)) +
geom_point(size = 2) + #makes the scatterplot
labs(title = "MLB Data",
subtitle = paste0("r = ", round(cor_value, 4),
", slightly and positively correlated"),
caption = "seasons 1990 to 1999",
x = "runs allowed",
y = "wins") +
scale_color_manual(values = c("green", "purple")) +
theme(legend.position = "none")
dbinom(3, 5, 0.6)
dbinom(4, 6, 0.4)
dbinom(5, 18, 0.55)
p = 1 - 0.75^.2
p
dbinom(0, 15, 0.39)
dbinom(0:1, 15, 0.39)
.0006 + .0058
pbinom(1, 15, 0.39)
round(dbinom(0:2, 15, 0.39).4)
round(dbinom(0:2, 15, 0.39),4)
sum(round(dbinom(0:2, 15, 0.39), 4)))
sum(round(dbinom(0:2, 15, 0.39), 4)))
sum(round(dbinom(0:2, 15, 0.39), 4))
pbinom(2, 15, 0.39)
1 - 0.0064
1 - pbinom(1, 15, 0.39)
n <- 580
p <- 0.25
n*p
sqrt(n*p*(1-p))
mu <- n*p
s <- sqrt(n*p*(1-p))
c(mu - 2*s, mu + 2*s)
?ppois
mean(c(3,1,19,2,4))
dpois(3, 5.8)
1 - dpois(0, 5.8)
mean(c(9,3,6,3,1))
dpois(3, 4.4)
ppois(1, 4.4)
pnorm(230, 243, 44/sqrt(35))
1 - pnorm(2.8, 3.0, 1.1/sqrt(4))
1 - pnorm(2.8, 3.0, 1.1/sqrt(44))
-1 / 9000*log(0.96)
-1 / (9000*log(0.96))
9000*log(0.96)
-9000*log(0.96)
dbinom(3, 5, 0.6)
dbinom(4, 6, 0.4)
dbinom(5, 18, 0.55)
n <- 15
dbinom(0, 15, 0.39)
1 - dbinom(0, 15, 0.39)
sum(dbinom(0:1, 15, 0.39))
sum(dbinom(0:2, 15, 0.39))
sum(dbinom(2:15, 15, 0.39))
n <- 580
p <- 0.25
mu <- n*p
sigma <- sqrt(n*p*(1-p))
c(mu - 2*sigma, mu + 2*sigma)
lambda <- 1/30
pexp(25, 1/30)
1 - pexp(40, 1/30)
1 - pexp(10, 1/60)
install.packages(c("bit", "blob", "broom", "bslib", "cachem", "callr", "cli", "colorspace", "commonmark", "conflicted", "cpp11", "crayon", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "fastmap", "fontawesome", "forcats", "fs", "future", "gargle", "gert", "ggplot2", "ggrepel", "ggsignif", "gh", "googledrive", "googlesheets4", "gower", "gt", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "infer", "ipred", "isoband", "janitor", "jsonlite", "knitr", "lava", "leaflet", "lhs", "listenv", "lubridate", "markdown", "modeldata", "modelenv", "modelr", "moderndive", "openssl", "parallelly", "parsnip", "pillar", "pkgbuild", "pkgdown", "pkgload", "plotly", "png", "processx", "progressr", "ps", "purrr", "ragg", "raster", "Rcpp", "readr", "readxl", "recipes", "reprex", "rlang", "rmarkdown", "roxygen2", "rsample", "rstudioapi", "rvest", "sass", "scales", "shiny", "sourcetools", "sp", "stringi", "stringr", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timeDate", "tinytex", "utf8", "vctrs", "viridisLite", "vroom", "webshot", "whisker", "workflows", "xfun", "yaml"))
26/40
round(dbinom(0:5,5, 0.39))
round(dbinom(0:5,5, 0.39), 4)
round(dbinom(0:5,5, 0.61), 4)
library("tidyverse")
library("visualize") #functions to create graphs of probability distributions
knitr::opts_chunk$set(echo = TRUE)
?visualize.binom
visualize.binom(section = "bounded", stat = c(0,0),
size = 55, prob = 0.39,
strict  = c(FALSE, FALSE))
visualize.binom(section = "bounded", stat = c(0,0),
size = 5, prob = 0.39,
strict  = c(FALSE, FALSE))
pbinom(2, 5, 0.61)
1 - pbinom(0, 5, 0.39)
1 - pbinom(0, 5, 0.39)
pnorm(100,90,5) - pnorm(80,90,5)
round(pnorm(seq(75,105,5),90,5),4)
visualize.norm(stat = c(80, 100), mu = 90, sd = 5, section = "bounded")
visualize.norm(stat = c(80, 100), mu = 90, sd = 5, section = "bounded")
visualize.norm(stat = 80, mu = 90, sd = 5, section = "lower")
visualize.norm(stat = 96, mu = 90, sd = 5, section = "upper")
visualize.norm(stat = c(80,96), mu = 90, sd = 5, section = "bounded")
quarto install tinytex
pbinom(10, 12, 0.6)
1 - pbinom(2, 12, 0.4)
library("tidyverse")
setwd("C:/Users/freex/Documents/GitHub/sml320/03_beta_binomial")
tips_df <- readr::read_csv("tips.csv")
colnames(tips_df)
table(tips_df$sex)
table(tips_df$smoker)
table(tips_df$day)
table(tips_df$time)
table(tips_df$size)
table(tips_df$day, tips_df$smoker)
tips_df |> group_by(day, smoker) |> tally()
tips_df |> group_by(day, smoker) |> tally() |> spread(day)
tips_df |> group_by(day, smoker) |> tally() |> spread(day, n)
